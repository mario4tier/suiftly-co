{
  "id": "3c97d653-e347-4085-9a62-e42604f708ab",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.api_keys": {
      "name": "api_keys",
      "schema": "",
      "columns": {
        "api_key_id": {
          "name": "api_key_id",
          "type": "varchar(100)",
          "primaryKey": true,
          "notNull": true
        },
        "api_key_fp": {
          "name": "api_key_fp",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "service_type": {
          "name": "service_type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "revoked_at": {
          "name": "revoked_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_customer_service": {
          "name": "idx_customer_service",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "service_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_api_key_fp": {
          "name": "idx_api_key_fp",
          "columns": [
            {
              "expression": "api_key_fp",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"api_keys\".\"is_active\" = true",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "api_keys_customer_id_customers_customer_id_fk": {
          "name": "api_keys_customer_id_customers_customer_id_fk",
          "tableFrom": "api_keys",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "customer_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.auth_nonces": {
      "name": "auth_nonces",
      "schema": "",
      "columns": {
        "address": {
          "name": "address",
          "type": "varchar(66)",
          "primaryKey": true,
          "notNull": true
        },
        "nonce": {
          "name": "nonce",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_created_at": {
          "name": "idx_created_at",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.refresh_tokens": {
      "name": "refresh_tokens",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "token_hash": {
          "name": "token_hash",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_refresh_customer": {
          "name": "idx_refresh_customer",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_expires_at": {
          "name": "idx_expires_at",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "refresh_tokens_customer_id_customers_customer_id_fk": {
          "name": "refresh_tokens_customer_id_customers_customer_id_fk",
          "tableFrom": "refresh_tokens",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "customer_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "refresh_tokens_token_hash_unique": {
          "name": "refresh_tokens_token_hash_unique",
          "nullsNotDistinct": false,
          "columns": [
            "token_hash"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.customers": {
      "name": "customers",
      "schema": "",
      "columns": {
        "customer_id": {
          "name": "customer_id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true
        },
        "wallet_address": {
          "name": "wallet_address",
          "type": "varchar(66)",
          "primaryKey": false,
          "notNull": true
        },
        "escrow_contract_id": {
          "name": "escrow_contract_id",
          "type": "varchar(66)",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "max_monthly_usd_cents": {
          "name": "max_monthly_usd_cents",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "current_balance_usd_cents": {
          "name": "current_balance_usd_cents",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "current_month_charged_usd_cents": {
          "name": "current_month_charged_usd_cents",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "last_month_charged_usd_cents": {
          "name": "last_month_charged_usd_cents",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "current_month_start": {
          "name": "current_month_start",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_wallet": {
          "name": "idx_wallet",
          "columns": [
            {
              "expression": "wallet_address",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_customer_status": {
          "name": "idx_customer_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"customers\".\"status\" != 'active'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "customers_wallet_address_unique": {
          "name": "customers_wallet_address_unique",
          "nullsNotDistinct": false,
          "columns": [
            "wallet_address"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "check_customer_id": {
          "name": "check_customer_id",
          "value": "\"customers\".\"customer_id\" > 0"
        },
        "check_status": {
          "name": "check_status",
          "value": "\"customers\".\"status\" IN ('active', 'suspended', 'closed')"
        }
      },
      "isRLSEnabled": false
    },
    "public.billing_records": {
      "name": "billing_records",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "customer_id": {
          "name": "customer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "billing_period_start": {
          "name": "billing_period_start",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "billing_period_end": {
          "name": "billing_period_end",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "amount_usd_cents": {
          "name": "amount_usd_cents",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "tx_digest": {
          "name": "tx_digest",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_customer_period": {
          "name": "idx_customer_period",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "billing_period_start",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_billing_status": {
          "name": "idx_billing_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"billing_records\".\"status\" != 'paid'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "billing_records_customer_id_customers_customer_id_fk": {
          "name": "billing_records_customer_id_customers_customer_id_fk",
          "tableFrom": "billing_records",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "customer_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.escrow_transactions": {
      "name": "escrow_transactions",
      "schema": "",
      "columns": {
        "tx_id": {
          "name": "tx_id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "tx_digest": {
          "name": "tx_digest",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "tx_type": {
          "name": "tx_type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(20, 8)",
          "primaryKey": false,
          "notNull": true
        },
        "asset_type": {
          "name": "asset_type",
          "type": "varchar(66)",
          "primaryKey": false,
          "notNull": false
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idx_escrow_customer": {
          "name": "idx_escrow_customer",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_escrow_tx_digest": {
          "name": "idx_escrow_tx_digest",
          "columns": [
            {
              "expression": "tx_digest",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "escrow_transactions_customer_id_customers_customer_id_fk": {
          "name": "escrow_transactions_customer_id_customers_customer_id_fk",
          "tableFrom": "escrow_transactions",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "customer_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "escrow_transactions_tx_digest_unique": {
          "name": "escrow_transactions_tx_digest_unique",
          "nullsNotDistinct": false,
          "columns": [
            "tx_digest"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.ledger_entries": {
      "name": "ledger_entries",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "customer_id": {
          "name": "customer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "amount_usd_cents": {
          "name": "amount_usd_cents",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "amount_sui_mist": {
          "name": "amount_sui_mist",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "sui_usd_rate_cents": {
          "name": "sui_usd_rate_cents",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "tx_hash": {
          "name": "tx_hash",
          "type": "varchar(66)",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "invoice_id": {
          "name": "invoice_id",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_customer_created": {
          "name": "idx_customer_created",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_ledger_tx_hash": {
          "name": "idx_ledger_tx_hash",
          "columns": [
            {
              "expression": "tx_hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"ledger_entries\".\"tx_hash\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "ledger_entries_customer_id_customers_customer_id_fk": {
          "name": "ledger_entries_customer_id_customers_customer_id_fk",
          "tableFrom": "ledger_entries",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "customer_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.service_instances": {
      "name": "service_instances",
      "schema": "",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "customer_id": {
          "name": "customer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "service_type": {
          "name": "service_type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "tier": {
          "name": "tier",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "is_enabled": {
          "name": "is_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "config": {
          "name": "config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "enabled_at": {
          "name": "enabled_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "disabled_at": {
          "name": "disabled_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "service_instances_customer_id_customers_customer_id_fk": {
          "name": "service_instances_customer_id_customers_customer_id_fk",
          "tableFrom": "service_instances",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "customer_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "service_instances_customer_id_service_type_unique": {
          "name": "service_instances_customer_id_service_type_unique",
          "nullsNotDistinct": false,
          "columns": [
            "customer_id",
            "service_type"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.seal_keys": {
      "name": "seal_keys",
      "schema": "",
      "columns": {
        "seal_key_id": {
          "name": "seal_key_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "customer_id": {
          "name": "customer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "public_key": {
          "name": "public_key",
          "type": "varchar(66)",
          "primaryKey": false,
          "notNull": true
        },
        "encrypted_private_key": {
          "name": "encrypted_private_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "purchase_tx_digest": {
          "name": "purchase_tx_digest",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_seal_customer": {
          "name": "idx_seal_customer",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "seal_keys_customer_id_customers_customer_id_fk": {
          "name": "seal_keys_customer_id_customers_customer_id_fk",
          "tableFrom": "seal_keys",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "customer_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.usage_records": {
      "name": "usage_records",
      "schema": "",
      "columns": {
        "record_id": {
          "name": "record_id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "service_type": {
          "name": "service_type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "request_count": {
          "name": "request_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "bytes_transferred": {
          "name": "bytes_transferred",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "window_start": {
          "name": "window_start",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "window_end": {
          "name": "window_end",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "charged_amount": {
          "name": "charged_amount",
          "type": "numeric(20, 8)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_customer_time": {
          "name": "idx_customer_time",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "window_start",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_billing": {
          "name": "idx_billing",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "service_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "window_start",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "usage_records_customer_id_customers_customer_id_fk": {
          "name": "usage_records_customer_id_customers_customer_id_fk",
          "tableFrom": "usage_records",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "customer_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.haproxy_raw_logs": {
      "name": "haproxy_raw_logs",
      "schema": "",
      "columns": {
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "customer_id": {
          "name": "customer_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "path_prefix": {
          "name": "path_prefix",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "config_hex": {
          "name": "config_hex",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "network": {
          "name": "network",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "server_id": {
          "name": "server_id",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "service_type": {
          "name": "service_type",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "api_key_fp": {
          "name": "api_key_fp",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "fe_type": {
          "name": "fe_type",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "traffic_type": {
          "name": "traffic_type",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "event_type": {
          "name": "event_type",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "client_ip": {
          "name": "client_ip",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "key_metadata": {
          "name": "key_metadata",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "status_code": {
          "name": "status_code",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "bytes_sent": {
          "name": "bytes_sent",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "time_total": {
          "name": "time_total",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "time_request": {
          "name": "time_request",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "time_queue": {
          "name": "time_queue",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "time_connect": {
          "name": "time_connect",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "time_response": {
          "name": "time_response",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "backend_id": {
          "name": "backend_id",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "termination_state": {
          "name": "termination_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_logs_customer_time": {
          "name": "idx_logs_customer_time",
          "columns": [
            {
              "expression": "customer_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"haproxy_raw_logs\".\"customer_id\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_logs_server_time": {
          "name": "idx_logs_server_time",
          "columns": [
            {
              "expression": "server_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_logs_service_network": {
          "name": "idx_logs_service_network",
          "columns": [
            {
              "expression": "service_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "network",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_logs_traffic_type": {
          "name": "idx_logs_traffic_type",
          "columns": [
            {
              "expression": "traffic_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_logs_event_type": {
          "name": "idx_logs_event_type",
          "columns": [
            {
              "expression": "event_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"haproxy_raw_logs\".\"event_type\" != 0",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_logs_status_code": {
          "name": "idx_logs_status_code",
          "columns": [
            {
              "expression": "status_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_logs_api_key_fp": {
          "name": "idx_logs_api_key_fp",
          "columns": [
            {
              "expression": "api_key_fp",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "timestamp",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"haproxy_raw_logs\".\"api_key_fp\" != 0",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "haproxy_raw_logs_customer_id_customers_customer_id_fk": {
          "name": "haproxy_raw_logs_customer_id_customers_customer_id_fk",
          "tableFrom": "haproxy_raw_logs",
          "tableTo": "customers",
          "columnsFrom": [
            "customer_id"
          ],
          "columnsTo": [
            "customer_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.processing_state": {
      "name": "processing_state",
      "schema": "",
      "columns": {
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.system_control": {
      "name": "system_control",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true
        },
        "ma_vault_version": {
          "name": "ma_vault_version",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false
        },
        "mm_vault_version": {
          "name": "mm_vault_version",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false
        },
        "last_monthly_reset": {
          "name": "last_monthly_reset",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "maintenance_mode": {
          "name": "maintenance_mode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "check_singleton": {
          "name": "check_singleton",
          "value": "\"system_control\".\"id\" = 1"
        }
      },
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}